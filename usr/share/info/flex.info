This is flex.info, produced by makeinfo version 6.0 from flex.texi.

The flex manual is placed under the same licensing conditions as the
rest of flex:

   Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2012 The Flex
Project.

   Copyright (C) 1990, 1997 The Regents of the University of California.
All rights reserved.

   This code is derived from software contributed to Berkeley by Vern
Paxson.

   The United States Government has rights in this work pursuant to
contract no.  DE-AC03-76SF00098 between the United States Department of
Energy and the University of California.

   Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are
met:

  1. Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.

  2. Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the
     distribution.

   Neither the name of the University nor the names of its contributors
may be used to endorse or promote products derived from this software
without specific prior written permission.

   THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
INFO-DIR-SECTION Programming
START-INFO-DIR-ENTRY
* flex: (flex).      Fast lexical analyzer generator (lex replacement).
END-INFO-DIR-ENTRY


Indirect:
flex.info-1: 1622
flex.info-2: 319115

Tag Table:
(Indirect)
Node: Top1622
Node: Copyright9420
Node: Reporting Bugs10939
Node: Introduction11195
Node: Simple Examples12024
Node: Format15312
Node: Definitions Section15767
Ref: Definitions Section-Footnote-118025
Node: Rules Section18093
Node: User Code Section19251
Node: Comments in the Input19689
Node: Patterns21059
Ref: case and character ranges27891
Node: Matching31894
Node: Actions35179
Node: Generated Scanner44141
Node: Start Conditions49160
Node: Multiple Input Buffers59702
Ref: Scanning Strings66243
Node: EOF67872
Node: Misc Macros69458
Node: User Values72312
Node: Yacc74637
Node: Scanner Options75532
Node: Options for Specifying Filenames78321
Ref: option-header78547
Ref: option-outfile79261
Ref: option-stdout79586
Node: Options Affecting Scanner Behavior80569
Ref: option-case-insensitive80810
Ref: option-lex-compat81243
Ref: option-batch81775
Ref: option-interactive82294
Ref: option-7bit83648
Ref: option-8bit84952
Ref: option-default85364
Ref: option-always-interactive85428
Ref: option-posix86032
Ref: option-stack87179
Ref: option-stdinit87287
Ref: option-yylineno87766
Ref: option-yywrap88209
Node: Code-Level And API Options88476
Ref: option-ansi-definitions88703
Ref: option-ansi-prototypes88951
Ref: option-bison-bridge89199
Ref: option-bison-locations89540
Ref: option-noline89800
Ref: option-reentrant90314
Ref: option-c++90926
Ref: option-array91052
Ref: option-pointer91150
Ref: option-prefix91277
Ref: option-main92805
Ref: option-nounistd92989
Ref: option-yyclass93500
Node: Options for Scanner Speed and Size93984
Ref: option-align94534
Ref: option-ecs95036
Ref: option-meta-ecs96075
Ref: option-read96563
Ref: option-full98446
Ref: option-fast98641
Node: Debugging Options99565
Ref: option-backup99752
Ref: option-debug100297
Ref: option-perf-report101019
Ref: option-nodefault101645
Ref: option-trace101963
Ref: option-nowarn102254
Ref: option-verbose102322
Ref: option-warn102751
Node: Miscellaneous Options102970
Node: Performance103426
Node: Cxx113673
Node: Reentrant121765
Node: Reentrant Uses122499
Node: Reentrant Overview124061
Node: Reentrant Example124861
Node: Reentrant Detail125634
Node: Specify Reentrant126138
Node: Extra Reentrant Argument126788
Node: Global Replacement128040
Node: Init and Destroy Functions129275
Node: Accessor Methods131796
Node: Extra Data133143
Node: About yyscan_t135410
Node: Reentrant Functions135807
Ref: bison-functions137291
Node: Lex and Posix138030
Node: Memory Management145377
Ref: memory-management145523
Node: The Default Memory Management145757
Ref: The Default Memory Management-Footnote-1149577
Node: Overriding The Default Memory Management149730
Ref: Overriding The Default Memory Management-Footnote-1152144
Node: A Note About yytext And Memory152308
Node: Serialized Tables153548
Ref: serialization153692
Node: Creating Serialized Tables154472
Node: Loading and Unloading Serialized Tables156087
Node: Tables File Format157860
Node: Diagnostics164885
Node: Limitations168294
Node: Bibliography170242
Node: FAQ170912
Node: When was flex born?176075
Node: How do I expand backslash-escape sequences in C-style quoted strings?176452
Node: Why do flex scanners call fileno if it is not ANSI compatible?177755
Node: Does flex support recursive pattern definitions?178552
Node: How do I skip huge chunks of input (tens of megabytes) while using flex?179399
Node: Flex is not matching my patterns in the same order that I defined them.179866
Node: My actions are executing out of order or sometimes not at all.181612
Node: How can I have multiple input sources feed into the same scanner at the same time?182385
Node: Can I build nested parsers that work with the same input file?184370
Node: How can I match text only at the end of a file?185377
Node: How can I make REJECT cascade across start condition boundaries?186181
Node: Why cant I use fast or full tables with interactive mode?187195
Node: How much faster is -F or -f than -C?188452
Node: If I have a simple grammar cant I just parse it with flex?188764
Node: Why doesn't yyrestart() set the start state back to INITIAL?189246
Node: How can I match C-style comments?189873
Node: The period isn't working the way I expected.190683
Node: Can I get the flex manual in another format?191928
Node: Does there exist a "faster" NDFA->DFA algorithm?192418
Node: How does flex compile the DFA so quickly?192928
Node: How can I use more than 8192 rules?193894
Node: How do I abandon a file in the middle of a scan and switch to a new file?195304
Node: How do I execute code only during initialization (only before the first scan)?195858
Node: How do I execute code at termination?196635
Node: Where else can I find help?196961
Node: Can I include comments in the "rules" section of the file?197335
Node: I get an error about undefined yywrap().197715
Node: How can I change the matching pattern at run time?198191
Node: How can I expand macros in the input?198553
Node: How can I build a two-pass scanner?199585
Node: How do I match any string not matched in the preceding rules?200503
Node: I am trying to port code from AT&T lex that uses yysptr and yysbuf.201412
Node: Is there a way to make flex treat NULL like a regular character?202207
Node: Whenever flex can not match the input it says "flex scanner jammed".202727
Node: Why doesn't flex have non-greedy operators like perl does?203370
Node: Memory leak - 16386 bytes allocated by malloc.204723
Ref: faq-memory-leak205021
Node: How do I track the byte offset for lseek()?205992
Node: How do I use my own I/O classes in a C++ scanner?207501
Node: How do I skip as many chars as possible?208344
Node: deleteme00209419
Node: Are certain equivalent patterns faster than others?209859
Node: Is backing up a big deal?213277
Node: Can I fake multi-byte character support?215183
Node: deleteme01216624
Node: Can you discuss some flex internals?217733
Node: unput() messes up yy_at_bol219977
Node: The | operator is not doing what I want221079
Node: Why can't flex understand this variable trailing context pattern?222625
Node: The ^ operator isn't working223874
Node: Trailing context is getting confused with trailing optional patterns225109
Node: Is flex GNU or not?226352
Node: ERASEME53228025
Node: I need to scan if-then-else blocks and while loops228795
Node: ERASEME55229994
Node: ERASEME56231092
Node: ERASEME57232450
Node: Is there a repository for flex scanners?233448
Node: How can I conditionally compile or preprocess my flex input file?233764
Node: Where can I find grammars for lex and yacc?234237
Node: I get an end-of-buffer message for each character scanned.234584
Node: unnamed-faq-62235179
Node: unnamed-faq-63236197
Node: unnamed-faq-64237494
Node: unnamed-faq-65238460
Node: unnamed-faq-66239246
Node: unnamed-faq-67240361
Node: unnamed-faq-68241348
Node: unnamed-faq-69242490
Node: unnamed-faq-70243203
Node: unnamed-faq-71243964
Node: unnamed-faq-72245173
Node: unnamed-faq-73246216
Node: unnamed-faq-74247140
Node: unnamed-faq-75248085
Node: unnamed-faq-76249217
Node: unnamed-faq-77249923
Node: unnamed-faq-78250816
Node: unnamed-faq-79251814
Node: unnamed-faq-80253514
Node: unnamed-faq-81254832
Node: unnamed-faq-82257632
Node: unnamed-faq-83258589
Node: unnamed-faq-84260369
Node: unnamed-faq-85261472
Node: unnamed-faq-86262479
Node: unnamed-faq-87263417
Node: unnamed-faq-88264063
Node: unnamed-faq-90264894
Node: unnamed-faq-91266157
Node: unnamed-faq-92268585
Node: unnamed-faq-93269084
Node: unnamed-faq-94270011
Node: unnamed-faq-95271423
Node: unnamed-faq-96272941
Node: unnamed-faq-97273700
Node: unnamed-faq-98274367
Node: unnamed-faq-99275032
Node: unnamed-faq-100275961
Node: unnamed-faq-101276671
Node: What is the difference between YYLEX_PARAM and YY_DECL?277484
Node: Why do I get "conflicting types for yylex" error?278008
Node: How do I access the values set in a Flex action from within a Bison action?278538
Node: Appendices278967
Node: Makefiles and Flex279232
Ref: Makefiles and Flex-Footnote-1282434
Ref: Makefiles and Flex-Footnote-2282551
Ref: Makefiles and Flex-Footnote-3282738
Node: Bison Bridge282789
Ref: Bison Bridge-Footnote-1285456
Node: M4 Dependency285648
Ref: M4 Dependency-Footnote-1287062
Node: Common Patterns287198
Node: Numbers287521
Node: Identifiers288497
Node: Quoted Constructs289324
Node: Addresses290378
Node: Indices291690
Node: Concept Index291982
Node: Index of Functions and Macros319115
Node: Index of Variables324084
Node: Index of Data Types325750
Node: Index of Hooks326638
Node: Index of Scanner Options327206

End Tag Table
